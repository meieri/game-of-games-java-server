{"version":3,"sources":["images/game-show-host-1.png","Components/LandingComponent.js","services/UserService.js","Components/LoginComponent.js","Components/RegisterComponent.js","services/GameService.js","Components/SpotifyComponent.js","Components/ProfileComponent.js","Components/CreateGameComponent.js","Components/PlayGameComponent.js","Components/GameOverComponent.js","Components/GameOfGames.js","App.js","serviceWorker.js","reducers/UserReducer.js","reducers/GameReducer.js","index.js"],"names":["module","exports","LandingComponent","state","width","window","innerWidth","handleWindowSizeChange","setState","addEventListener","this","removeEventListener","isMobile","className","src","man","alt","to","style","color","React","Component","connect","loggedIn","userReducer","username","password","fetch","body","JSON","stringify","headers","method","credentials","then","response","json","newUser","LoginComponent","badLogin","prevProps","prevState","snapshot","props","history","push","onChange","e","target","value","placeholder","type","onClick","login","dispatch","UserService","currentUser","RegisterComponent","confirmPassword","handleSubmit","messages","trim","match","length","alert","join","register","id","htmlFor","aria-describedby","required","newGame","gameId","SpotifyComponent","href","ProfileComponent","editingUsername","editingPassword","findProfile","findGameByUser","disabled","icon","faEdit","updateUsername","logout","scope","gameList","map","game","name","gameReducer","userGames","catch","user","newUsername","GameService","shallowGames","games","CreateGameComponent","categories","newCard","flipCard","newCardQuestion","newCardAnswer","newCardValue","modal","currentGameId","createGame","Object","keys","category","key","question","newValue","newQuestion","newAnswer","newCardTitle","faCheck","faPlus","shallowGame","PlayGameComponent","playingQuestion","showAnswer","team1Points","team2Points","team1turn","playedQuestions","youWannaBeDone","endGame","winner","playGame","findGameById","params","document","overflow","inPlay","questions","includes","answer","endedGame","GameOverComponent","windowWidth","height","windowHeight","GameOfGames","path","exact","component","App","Boolean","location","hostname","initialState","event","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.0758963f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/game-show-host-1.3f80d8d7.png\";","import React from \"react\";\r\nimport man from \"../images/game-show-host-1.png\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./LandingComponent.css\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass LandingComponent extends React.Component {\r\n  state = {\r\n    width: window.innerWidth,\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleWindowSizeChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleWindowSizeChange);\r\n  }\r\n\r\n  handleWindowSizeChange = () => {\r\n    this.setState({width: window.innerWidth});\r\n  };\r\n\r\n  render() {\r\n    const isMobile = this.state.width <= 800;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container landing-page\">\r\n          <div className=\"row\">\r\n            <div className=\"media\">\r\n              {!isMobile && <img className=\"align-self-start\" src={man} alt=\"Generic man\"/>}\r\n              <div className=\"media-body\">\r\n                <h5 className={isMobile ? \"mobile-media-body-heading\" : \"media-body-heading\"}>\r\n                  <strong>Welcome!</strong>\r\n                </h5>\r\n                <br/>\r\n                <p>\r\n                  You've found yourself at the home of the Game of Games.\r\n                  We've created a custom, brand new, un-before-heard of game--\r\n                  based almost entirely off Jeopardy. However, you create the\r\n                  board. And the questions. Sound like fun?\r\n                  <Link to={\"/register\"} style={{color: \"white\"}}>\r\n                    {\" \"}\r\n                    Let's get started.\r\n                  </Link>\r\n                </p>\r\n                <br/>\r\n                <p>\r\n                  Not yet convinced? Here's some more info-- the game board is\r\n                  divided into 5 categories, but each category is a different\r\n                  type of party game. Only one person has to log in-- the host\r\n                  needs to do a tiny bit of preliminary work for the benefit\r\n                  of the group. Once they've created the game board, they'll\r\n                  send around a link to the other players who will work as a\r\n                  team to create a game that'll \"get the whole squad\r\n                  laughing\".\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loggedIn: state.userReducer.loggedIn,\r\n})\r\n\r\nexport default connect(mapStateToProps)(LandingComponent)\r\n","const login = (username, password) =>\r\n  fetch(\"https://isaak-game-of-games-meier.herokuapp.com/api/login\", {\r\n    body: JSON.stringify({username: username, password: password}),\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    method: 'POST',\r\n    credentials: \"include\"\r\n  })\r\n    .then(response => response.json())\r\n\r\nconst logout = () =>\r\n  fetch(`https://isaak-game-of-games-meier.herokuapp.com/api/logout`, {\r\n    method: 'POST',\r\n    credentials: \"include\"\r\n  })\r\n\r\nconst register = (newUser) =>\r\n  fetch(`https://isaak-game-of-games-meier.herokuapp.com/api/register`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newUser),\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    credentials: \"include\",\r\n  })\r\n    .then((response) => response.json())\r\n\r\nconst updateUsername = (username) =>\r\n  fetch(\"https://isaak-game-of-games-meier.herokuapp.com/api/user/name\", {\r\n    method: 'POST',\r\n    body: username,\r\n    credentials: \"include\"\r\n  })\r\n    .then(response => response.json())\r\n\r\nconst findProfile = () =>\r\n  fetch(`https://isaak-game-of-games-meier.herokuapp.com/api/profile`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    credentials: \"include\"\r\n  })\r\n    .then(response => response.json())\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  register,\r\n  updateUsername,\r\n  findProfile\r\n}\r\n","import React from \"react\";\r\nimport './LoginComponent.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport UserService from \"../services/UserService\";\r\nimport {connect} from 'react-redux'\r\n\r\nclass LoginComponent extends React.Component {\r\n\r\n  state = {\r\n    username: '',\r\n    password:'',\r\n    badLogin: false\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.badLogin !== this.props.badLogin) {\r\n      this.setState({ username: '', password: '', badLogin: true})\r\n    }\r\n    if (this.props.loggedIn === true) {\r\n      this.props.history.push('/profile')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container signInContainer'>\r\n        <form className=\"form-signin\">\r\n          <div className='d-flex justify-content-center'>\r\n            <h1 className=\"h3 mb-3 loginHeader\">Log In Here</h1>\r\n          </div>\r\n\r\n          <input\r\n            className=\"form-control usernameField\"\r\n            onChange={(e) => this.setState({username: e.target.value})}\r\n            value={this.state.username}\r\n            placeholder=\"Username\"/>\r\n\r\n          <input\r\n            type=\"password\"\r\n            onChange={(e) => this.setState({password: e.target.value})}\r\n            value={this.state.password}\r\n            className=\"form-control passwordField\"\r\n            placeholder=\"Password\"/>\r\n\r\n          <div className=\"checkbox mt-3\">\r\n            <label>\r\n              <input type=\"checkbox\" value=\"remember-me\"/> Remember me\r\n            </label>\r\n          </div>\r\n\r\n          {\r\n            this.state.badLogin &&\r\n              <div>\r\n                <small className=\"form-text badLoginText mb-3\">No can do, mystery man. <Link className='badLoginText' to={'/register'}>Create an account?</Link></small>\r\n              </div>\r\n          }\r\n\r\n            <button\r\n              className=\"btn btn-lg btn-outline-light loginBtn \"\r\n              type='button'\r\n              onClick={() => this.props.login(this.state.username, this.state.password)}>\r\n              Log Me In!</button>\r\n\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loggedIn: state.userReducer.loggedIn,\r\n  badLogin: state.userReducer.badLogin\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  login: (username, password) =>\r\n    UserService.login(username, password)\r\n      .then(currentUser => {\r\n      if(currentUser.username !== \"BADLOGIN\") {\r\n        dispatch({\r\n          type: \"LOGIN\",\r\n          username\r\n        })\r\n      }\r\n      else {\r\n        dispatch({\r\n          type: \"FAILED_LOGIN\"\r\n        })\r\n      }\r\n    })\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent)\r\n\r\n","import React from \"react\";\r\nimport \"./RegisterComponent.css\";\r\nimport UserService from \"../services/UserService\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass RegisterComponent extends React.Component {\r\n\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.loggedIn !== this.props.loggedIn && this.props.loggedIn === true) {\r\n      alert(\"Sign Up Successful\");\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    let messages = [];\r\n    const alphanumeric = /^[0-9a-zA-Z]+$/;\r\n\r\n    if (\r\n      this.state.username.trim() === \"\" ||\r\n      this.state.password.trim() === \"\" ||\r\n      this.state.confirmPassword.trim() === \"\"\r\n    ) {\r\n      messages.push(\r\n        \"Fields must be non-empty and contain non-space characters\"\r\n      );\r\n    }\r\n    if (!this.state.username.match(alphanumeric)) {\r\n      messages.push(\"Username must only contain alphanumeric characters\");\r\n    }\r\n    if (this.state.username.length < 4 || this.state.username.length > 12) {\r\n      messages.push(\"Username must be between 4 and 12 characters in length\");\r\n    }\r\n    if (this.state.password !== this.state.confirmPassword) {\r\n      messages.push(\"Passwords do not match\");\r\n    }\r\n    if (messages.length > 0) {\r\n      alert(messages.join(\", \"));\r\n      return true;\r\n    } else {\r\n      this.props.register({\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n      })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container RegisterContainer\">\r\n        <form className=\"form-register\" id=\"form\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <h1 className=\"h3 mb-3 signUpHeader\">Sign Up Here</h1>\r\n          </div>\r\n\r\n          <div id=\"error\"></div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"userInput\">Create a Username</label>\r\n            <input\r\n              className=\"form-control\"\r\n              onChange={(e) => this.setState({username: e.target.value})}\r\n              id=\"userInput\"\r\n              aria-describedby=\"userHelp\"\r\n              placeholder=\"Username\"\r\n              required\r\n            />\r\n            <small id=\"userHelp\" className=\"form-text\">\r\n              Between 4-12 characters, alphanumeric.\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"passwordInput\">Create a Password</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              onChange={(e) => this.setState({password: e.target.value})}\r\n              id=\"passwordInput\"\r\n              aria-describedby=\"userHelp\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n            <small id=\"userHelp\" className=\"form-text\">\r\n              Requires nothing. Go wild.\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"passwordInput1\">Confirm your Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              onChange={(e) => this.setState({confirmPassword: e.target.value})}\r\n              id=\"passwordInput1\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            className=\"btn btn-lg btn-outline-light registerBtn\"\r\n            type=\"button\"\r\n            onClick={() => this.handleSubmit()}>\r\n            Sign Me Up!\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n  loggedIn: state.userReducer.loggedIn\r\n})\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n  register: (newUser) =>\r\n    UserService.register(newUser)\r\n      .then(dispatch({\r\n        type: \"LOGIN\",\r\n        username: newUser.username\r\n      }))\r\n})\r\n\r\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(RegisterComponent)","const createGame = (newGame) =>\r\n  fetch(`https://isaak-game-of-games-meier.herokuapp.com/api/game`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(newGame),\r\n    credentials: \"include\",\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    }\r\n  })\r\n    .then(response => response.json())\r\n\r\nconst findGameById = (gameId) =>\r\n  fetch(`https://isaak-game-of-games-meier.herokuapp.com/api/game/${gameId}`, {\r\n    method: 'GET'\r\n  })\r\n    .then(response => response.json())\r\n\r\nconst findGameByUser = () =>\r\n  fetch(`https://isaak-game-of-games-meier.herokuapp.com/api/user/games`, {\r\n    method: 'POST',\r\n    credentials: \"include\",\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    }\r\n  })\r\n    .then(response => response.json())\r\n\r\nconst endGame =  (gameId) =>\r\n  fetch(`https://isaak-game-of-games-meier.herokuapp.com/api/gameover/${gameId}`, {\r\n    method: 'POST',\r\n    credentials: \"include\",\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    }\r\n  })\r\n    .then(response => response.json())\r\n\r\nexport default {\r\n  createGame,\r\n  findGameById,\r\n  findGameByUser,\r\n  endGame\r\n}","import React from \"react\";\r\nimport \"./SpotifyComponent.css\";\r\n\r\nclass SpotifyComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href=\"http://localhost:8888\"> Login to Spotify </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpotifyComponent\r\n","import React from \"react\";\r\nimport './ProfileComponent.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faEdit} from '@fortawesome/free-solid-svg-icons'\r\nimport {connect} from 'react-redux'\r\nimport UserService from \"../services/UserService\";\r\nimport GameService from \"../services/GameService\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SpotifyComponent from \"./SpotifyComponent\";\r\n\r\nclass ProfileComponent extends React.Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    editingUsername: false,\r\n    editingPassword: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.findProfile().then( response => {\r\n        if (this.props.loggedIn === true) {\r\n          this.setState({\r\n            username: this.props.username\r\n          })\r\n          this.props.findGameByUser()\r\n        } else {\r\n          this.props.history.push('/')\r\n        }\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.loggedIn !== this.props.loggedIn) {\r\n      if (this.props.loggedIn === true) {\r\n        this.setState({\r\n          username: this.props.username\r\n        })\r\n      } else if (!this.props.loggedIn) {\r\n        this.props.history.push('/')\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div className='d-flex justify-content-center'>\r\n          <h1>Welcome, {this.state.username}</h1>\r\n        </div>\r\n        <div className='container mt-3'>\r\n          <div className='row'>\r\n            <div className='col-5 profileInfo'>\r\n              <h1>User Info</h1>\r\n              <form className='mt-3 '>\r\n\r\n                <div className=\"form-group row d-inline-flex align-items-center\">\r\n                  <label htmlFor=\"usernameField\" className=\"col-form-label ml-3\">Username:</label>\r\n                  <fieldset disabled={!this.state.editingUsername} className='ml-3'>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"usernameField\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => this.setState({username: e.target.value})}\r\n                      placeholder={this.state.username}/>\r\n                  </fieldset>\r\n                  {\r\n                    !this.state.editingUsername &&\r\n                    <button\r\n                      className='btn btn-outline-light ml-3'\r\n                      type='button'\r\n                      onClick={() => this.setState({editingUsername: true})}>\r\n                      <FontAwesomeIcon icon={faEdit}/>\r\n                    </button>\r\n                  }\r\n                  {\r\n                    this.state.editingUsername &&\r\n                    <button\r\n                      className='btn btn-outline-light ml-3'\r\n                      type='button'\r\n                      onClick={() => {\r\n                        this.props.updateUsername(this.state.username)\r\n                        this.setState({editingUsername: false})\r\n                      }}>\r\n                      Submit\r\n                    </button>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"form-group row d-inline-flex align-items-center\">\r\n                  <label htmlFor=\"passwordField\" className=\"col-form-label ml-3 mr-1\">Password:</label>\r\n                  <fieldset disabled={!this.state.editingPassword} className='ml-3'>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"passwordField\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => this.setState({password: e.target.value})}\r\n                      placeholder='&#9679;&#9679;&#9679;&#9679;&#9679;'/>\r\n                  </fieldset>\r\n                  {\r\n                    !this.state.editingPassword &&\r\n                    <button\r\n                      className='btn btn-outline-light ml-3'\r\n                      type='button'\r\n                      onClick={() => this.setState({editingPassword: true})}>\r\n                      <FontAwesomeIcon icon={faEdit}/>\r\n                    </button>\r\n                  }\r\n                  {\r\n                    this.state.editingPassword &&\r\n                    <button\r\n                      className='btn btn-outline-light ml-3'\r\n                      type='button'\r\n                      onClick={() => this.setState({editingPassword: false})}>\r\n                      Submit\r\n                    </button>\r\n                  }\r\n                </div>\r\n                <hr />\r\n                <h1>Spotify</h1>\r\n                <SpotifyComponent />\r\n\r\n                <hr />\r\n                <button type='button'\r\n                        className='btn btn-outline-light btn-lg mb-3'\r\n                        onClick={() => this.props.logout()}>\r\n                  Log Out\r\n                </button>\r\n              </form>\r\n            </div>\r\n\r\n            <div className='col-6'>\r\n              <div>\r\n                <div className='form-inline'>\r\n                  <h1 className='mr-3'>Your Games</h1>\r\n                  <button\r\n                    onClick={() => this.props.history.push('/create')}\r\n                    className='btn btn-outline-light btn-lg'>Create New Game\r\n                  </button>\r\n                </div>\r\n                <table className='table'>\r\n                  <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Date Created</th>\r\n                    <th scope=\"col\"></th>\r\n                  </tr>\r\n                  </thead>\r\n                  {this.props.gameList &&\r\n                  <tbody>\r\n                  {this.props.gameList.map(game =>\r\n                    <tr>\r\n                      <th scope=\"row\">{game.id}</th>\r\n                      <td>{game.name}</td>\r\n                      <td><Link className=\"play-again\" to={`/play/${game.id}`}>Play Me Again!</Link></td>\r\n                    </tr>\r\n                  )}\r\n                  </tbody>\r\n                  }\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n  loggedIn: state.userReducer.loggedIn,\r\n  username: state.userReducer.username,\r\n  gameList: state.gameReducer.userGames\r\n})\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n  findProfile: () =>\r\n    UserService.findProfile()\r\n      .catch(e =>\r\n      dispatch({\r\n        type: \"LOGOUT\"\r\n      }))\r\n      .then(user =>\r\n        dispatch({\r\n          type: \"LOGIN\",\r\n          username: user.username\r\n        })),\r\n\r\n  logout: () =>\r\n    UserService.logout()\r\n      .then(() =>\r\n        dispatch({type: \"LOGOUT\"})\r\n      ),\r\n  updateUsername: (username) =>\r\n    UserService.updateUsername\r\n    (username)\r\n      .then(response => dispatch({\r\n          type: \"UPDATE_NAME\",\r\n          newUsername: response.username\r\n        })\r\n      ),\r\n  findGameByUser: () =>\r\n    GameService.findGameByUser()\r\n      // returns games only for surface level\r\n      .then(shallowGames => dispatch({\r\n        type: \"SET_USER_GAMES\",\r\n        games: shallowGames\r\n      }))\r\n\r\n})\r\n\r\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(ProfileComponent)\r\n","import React from \"react\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faPlus, faCheck} from '@fortawesome/free-solid-svg-icons'\r\nimport './CreateGameComponent.css'\r\nimport GameService from \"../services/GameService\";\r\nimport {connect} from 'react-redux'\r\n\r\nclass CreateGameComponent extends React.Component {\r\n  state = {\r\n    categories: {\r\n      \"Pictionary\": [],\r\n      \"Physical\": [],\r\n      \"Art\": [],\r\n      \"Trivia\": [],\r\n      \"Categories\": []\r\n    },\r\n\r\n    newCard: {},\r\n    flipCard: {},\r\n    newCardQuestion: \"\",\r\n    newCardAnswer: \"\",\r\n    newCardValue: \"100\",\r\n    modal: false\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.currentGameId !== this.props.currentGameId) {\r\n        this.props.history.push(`/play/${this.props.currentGameId}`)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <h1 className='d-flex justify-content-center mb-3 create-game'>\r\n          <button className='btn-outline-light btn btn-lg' onClick={() => this.setState({modal: true})}>Create the\r\n                                                                                                        Game\r\n          </button>\r\n        </h1>\r\n\r\n        {this.state.modal &&\r\n        <div className='d-flex justify-content-center mb-3 form-inline'>\r\n          Are you sure?\r\n          <button className='btn btn-outline-light mx-1' onClick={() => this.props.createGame(this.state.categories)}>Yes</button>\r\n          <button className='btn btn-outline-light mx-1' onClick={() => this.setState({modal: false})}>No</button>\r\n        </div>\r\n        }\r\n\r\n\r\n        <div className='container-fluid game-board-create'>\r\n          <div className='row d-flex justify-content-center'>\r\n            {Object.keys(this.state.categories).map(category =>\r\n              <div\r\n                key={category}\r\n                className='btn col game-col-create mx-2'>\r\n                <div className='row game-card-cat-create d-flex justify-content-center align-content-center'>\r\n                  {category}\r\n                </div>\r\n\r\n                {\r\n                  this.state.categories[category].map(question =>\r\n                    <div\r\n                      key={question[\"question\"]}\r\n                      onClick={() => this.setState({flipCard: question})}\r\n                      className='row game-card-create d-flex justify-content-center align-content-center mt-2'>\r\n\r\n                      {\r\n                        this.state.flipCard === question &&\r\n                        <div>\r\n                          {question[\"answer\"]}\r\n                          <div>Value: {question[\"value\"]}</div>\r\n                        </div>\r\n                      }\r\n                      {\r\n                        this.state.flipCard !== question &&\r\n                        <div>{question[\"question\"]}</div>\r\n                      }\r\n                    </div>\r\n                  )\r\n                }\r\n\r\n                {\r\n                  this.state.newCard === category &&\r\n                  <div\r\n                    className='row game-card-create d-flex justify-content-center align-content-center mt-2'>\r\n                    <input\r\n                      onChange={(e) => this.setState({newCardQuestion: e.target.value})}\r\n                      placeholder='Question'\r\n                      className='input-group mx-3 mt-1'/>\r\n\r\n                    <input\r\n                      onChange={(e) => this.setState({newCardAnswer: e.target.value})}\r\n                      placeholder='Answer'\r\n                      className='input-group input-group-sm mx-3 mt-1'/>\r\n\r\n                    <form className='form-inline'>\r\n                      <div className='input-group input-group-sm m-2'>\r\n                        <div className=\"input-group-prepend\">\r\n                          <label className=\"input-group-text \" htmlFor=\"pointSelector\">Point Value</label>\r\n                        </div>\r\n                        <select\r\n                          className='custom-select'\r\n                          id='pointSelector'\r\n                          onChange={(e) => this.setState({newCardValue: e.target.value})}>\r\n                          <option value=\"100\">100</option>\r\n                          <option value=\"200\">200</option>\r\n                          <option value=\"300\">300</option>\r\n                          <option value=\"400\">400</option>\r\n                          <option value=\"500\">500</option>\r\n                        </select>\r\n                      </div>\r\n                    </form>\r\n\r\n                    <button\r\n                      onClick={() => {\r\n                        const newValue = this.state.newCardValue\r\n                        const newQuestion = this.state.newCardQuestion\r\n                        const newAnswer = this.state.newCardAnswer\r\n                        this.setState(prevState => ({\r\n                          newCardValue: \"100\",\r\n                          newCardTitle: \"\",\r\n                          newCardQuestion: \"\",\r\n                          newCard: {},\r\n                          categories: {\r\n                            ...prevState.categories,\r\n                            [category]: [\r\n                              ...prevState.categories[category],\r\n                              {\"question\": newQuestion, \"answer\": newAnswer, \"value\": newValue},\r\n                            ]\r\n                          }\r\n                        }))\r\n                      }}\r\n                      className='btn btn-outline-light my-1'>\r\n                      <FontAwesomeIcon icon={faCheck}></FontAwesomeIcon>\r\n                    </button>\r\n                  </div>\r\n                }\r\n\r\n                <div\r\n                  onClick={() => this.setState({newCard: category})}\r\n                  className='row game-card-create d-flex justify-content-center align-content-center mt-2'>\r\n                  <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\r\n                </div>\r\n\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n  currentGameId: state.gameReducer.currentGameId\r\n})\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n  createGame: (newGame) =>\r\n    GameService.createGame(newGame)\r\n      // this returns a surface level game, with no categories or questions\r\n      .then(shallowGame => dispatch({\r\n        type: \"CREATE_GAME\",\r\n        gameId: shallowGame.id\r\n      })),\r\n\r\n})\r\n\r\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(CreateGameComponent)","import React from \"react\";\r\nimport GameService from \"../services/GameService\";\r\nimport {connect} from \"react-redux\";\r\nimport './PlayGameComponent.css'\r\n\r\nclass PlayGameComponent extends React.Component {\r\n\r\n  state = {\r\n    game: '',\r\n    playingQuestion: '',\r\n    showAnswer: false,\r\n    team1Points: 0,\r\n    team2Points: 0,\r\n    team1turn: true,\r\n    playedQuestions: [],\r\n    youWannaBeDone: false\r\n  }\r\n\r\n  // TODO remap 'cc' to 'dd O' in vim\r\n  componentDidMount() {\r\n    this.props.playGame()\r\n    this.props.findGameById(this.props.match.params.gameId)\r\n    document.body.style.overflow = \"hidden\";\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.game !== this.props.game && this.props.game) {\r\n      this.setState({game: this.props.game})\r\n    }\r\n    if (prevProps.inPlay === true && this.props.inPlay === false) {\r\n      this.props.history.push('/gameover')\r\n    }\r\n  }\r\n\r\n  endGame = () => {\r\n    let winner = '';\r\n    if (this.state.team1Points > this.state.team2Points) {\r\n      winner = \"Team 1\"\r\n    } else if (this.state.team1Points < this.state.team2Points){\r\n      winner = \"Team 2\"\r\n    } else {\r\n      winner = \"Nobody\"\r\n    }\r\n    this.props.endGame(winner, this.state.game.id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.playingQuestion === '' &&\r\n          <div className='container-fluid game-board mt-3'>\r\n            <div className='row d-flex justify-content-center'>\r\n              {this.state.game &&\r\n              this.state.game.categories.map(category =>\r\n                <div\r\n                  key={category.id}\r\n                  className='btn col game-col mx-2'>\r\n                  <div className='row game-card-cat d-flex justify-content-center align-content-center'>\r\n                    {category.name}\r\n                  </div>\r\n                  {category.questions.map(question =>\r\n                    <div>\r\n                      {\r\n                        !this.state.playedQuestions.includes(question.id) &&\r\n                        <div key={question.id}\r\n                             className='row game-card d-flex justify-content-center align-content-center mt-2'\r\n                             onClick={() => this.setState({playingQuestion: question})}>\r\n                          <div>{question.value}</div>\r\n                        </div>\r\n                      }\r\n                      {\r\n                        this.state.playedQuestions.includes(question.id) &&\r\n                        <div key={question.id}\r\n                             className='row game-card-played d-flex justify-content-center align-content-center mt-2'>\r\n                          <div>{question.value}</div>\r\n                        </div>\r\n                      }\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className='container-fluid d-inline-flex justify-content-between mt-0 team-container'>\r\n              <div className={this.state.team1turn ? 'my-turn' : ''}>\r\n                <div className='py-1 px-2'>Team 1: {this.state.team1Points}</div>\r\n              </div>\r\n              <div>\r\n                {!this.state.youWannaBeDone &&\r\n                <button\r\n                  onClick={() => this.setState({youWannaBeDone: true})}\r\n                  className='btn btn-outline-light'>End Game</button>\r\n                }\r\n                {this.state.youWannaBeDone &&\r\n                <div>\r\n                  Are you sure\r\n                  <button\r\n                    onClick={() => this.endGame()}\r\n                    className='ml-3 btn btn-outline-light'>Yes</button>\r\n                  <button\r\n                    onClick={() => this.setState({youWannaBeDone: false})}\r\n                    className='ml-3 btn btn-outline-light'>No</button>\r\n                </div>\r\n                }\r\n              </div>\r\n              <div\r\n                className={this.state.team1turn ? '' : 'my-turn'}>\r\n                <div className='py-1 px-2'>Team 2: {this.state.team2Points}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n        {\r\n          this.state.playingQuestion !== '' &&\r\n          <div\r\n            className='container-fluid game-board-create'>\r\n            <div>\r\n              {!this.state.showAnswer &&\r\n              <div\r\n                className='question centered'\r\n                onClick={() => this.setState({showAnswer: true})}>\r\n                {this.state.playingQuestion.question}\r\n              </div>\r\n              }\r\n              {this.state.showAnswer &&\r\n              <div>\r\n                <div\r\n                  className='question centered'>\r\n                  {this.state.playingQuestion.answer}\r\n                </div>\r\n\r\n                <div className='container-fluid d-inline-flex justify-content-between mt-3 team-container'>\r\n                  <div>\r\n                    <div\r\n                      onClick={\r\n                        () => this.setState(prevState => ({\r\n                          ...prevState,\r\n                          team1turn: true,\r\n                          team1Points: prevState.team1Points + this.state.playingQuestion.value,\r\n                          showAnswer: false,\r\n                          playingQuestion: '',\r\n                          playedQuestions: [...prevState.playedQuestions, this.state.playingQuestion.id]\r\n                        }))\r\n                      }\r\n                      className='py-1 px-2 select-winner'>Team 1\r\n                    </div>\r\n                  </div>\r\n\r\n                  <h1>Select Winner</h1>\r\n\r\n                  <div\r\n                    onClick={\r\n                      () => this.setState(prevState => ({\r\n                        team1turn: false,\r\n                        team2Points: prevState.team2Points + this.state.playingQuestion.value,\r\n                        showAnswer: false,\r\n                        playingQuestion: '',\r\n                        playedQuestions: [...prevState.playedQuestions, this.state.playingQuestion.id]\r\n                      }))\r\n                    }>\r\n                    <div className='py-1 px-2 select-winner'>Team 2</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n  game: state.gameReducer.game,\r\n  inPlay: state.gameReducer.inPlay\r\n})\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n  playGame: () =>\r\n    dispatch({\r\n      type: \"PLAY_GAME\"\r\n    }),\r\n\r\n  findGameById: (gameId) =>\r\n    GameService.findGameById(gameId)\r\n      .then(game => dispatch({\r\n        type: \"FIND_GAME\",\r\n        game\r\n      })),\r\n\r\n  endGame: (winner, gameId) =>\r\n    GameService.endGame(gameId)\r\n      .then(endedGame => dispatch({\r\n        type: \"END_GAME\",\r\n        winner\r\n      }))\r\n\r\n})\r\n\r\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(PlayGameComponent)\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Confetti from 'react-confetti'\r\n\r\nclass GameOverComponent extends React.Component {\r\n  render() {\r\n    const width = this.props.windowWidth\r\n    const height = this.props.windowHeight\r\n    return (\r\n      <div className='container '>\r\n        <Confetti width={width} height={height}/>\r\n        <h1 className='mt-3 d-flex justify-content-center'>Game Over</h1>\r\n        <h1 className='mt-3 d-flex justify-content-center'>Congratulations to {this.props.winner}!</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n  winner: state.gameReducer.winner\r\n})\r\n\r\nexport default connect(stateToPropertyMapper)(GameOverComponent)\r\n","import React from \"react\";\r\nimport {BrowserRouter, Route, Link} from 'react-router-dom'\r\nimport LandingComponent from \"./LandingComponent\";\r\nimport LoginComponent from \"./LoginComponent\";\r\nimport RegisterComponent from \"./RegisterComponent\";\r\nimport ProfileComponent from \"./ProfileComponent\";\r\nimport CreateGameComponent from \"./CreateGameComponent\";\r\nimport PlayGameComponent from \"./PlayGameComponent\";\r\nimport GameOverComponent from \"./GameOverComponent\";\r\nimport {connect} from 'react-redux'\r\nimport './GameOfGames.css'\r\n\r\nclass GameOfGames extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BrowserRouter>\r\n          {/*Navbar header for all pages :)*/}\r\n          {\r\n            !this.props.inPlay &&\r\n            <div className='navbar'>\r\n              <Link\r\n                to={'/'}\r\n                className='ml-3 navbar-heading barHeading'>Game Of Games</Link>\r\n              {\r\n                !this.props.loggedIn &&\r\n                <div className=\"profile-access\">\r\n                  <Link\r\n                    to={'/login'}\r\n                    className='mr-3 barLink'>Log In</Link>\r\n                  <Link\r\n                    to={'/register'}\r\n                    className='mr-3 barLink'>Sign Up</Link>\r\n                </div>\r\n              }\r\n              {\r\n                this.props.loggedIn &&\r\n                <div>\r\n                  <Link\r\n                    to={'/profile'}\r\n                    className='mr-3 barLink'>Profile</Link>\r\n                  <Link\r\n                    to={'/create'}\r\n                    className='mr-3 barLink'>Create Game</Link>\r\n                </div>\r\n              }\r\n            </div>\r\n          }\r\n          <Route\r\n            path='/'\r\n            exact={true}\r\n            component={LandingComponent}/>\r\n          <Route\r\n            path='/login'\r\n            exact={true}\r\n            component={LoginComponent}/>\r\n          <Route\r\n            path='/register'\r\n            exact={true}\r\n            component={RegisterComponent}/>\r\n          <Route\r\n            path='/profile'\r\n            exact={true}\r\n            component={ProfileComponent}/>\r\n          <Route\r\n            path='/create'\r\n            exact={true}\r\n            component={CreateGameComponent}/>\r\n          <Route\r\n            path='/play/:gameId'\r\n            exact={true}\r\n            component={PlayGameComponent}/>\r\n          <Route\r\n            path='/gameover'\r\n            exact={true}\r\n            component={GameOverComponent}/>\r\n        </BrowserRouter>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loggedIn: state.userReducer.loggedIn,\r\n  inPlay: state.gameReducer.inPlay\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(GameOfGames)\r\n","import React from 'react';\nimport './App.css';\nimport GameOfGames from \"./Components/GameOfGames\";\n\nfunction App() {\n  return (\n    <div>\n      <GameOfGames/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  username: '',\r\n  loggedIn: false,\r\n  // will be either 0, 1 or 2: 0 for good login.\r\n  // need to have updateComponent in LoginComponent called on consecutive bad login attempts\r\n  badLogin: 0\r\n}\r\n\r\nconst userReducer = (state = initialState, event) => {\r\n  switch (event.type) {\r\n\r\n    case \"LOGIN\":\r\n      return {\r\n        username: event.username,\r\n        loggedIn: true,\r\n        badLogin: 0\r\n      }\r\n\r\n    case \"UPDATE_NAME\":\r\n      return {\r\n        ...state,\r\n        username: event.newUsername\r\n      }\r\n\r\n    case \"LOGOUT\":\r\n      return initialState\r\n\r\n    case \"FAILED_LOGIN\":\r\n      let badLogin = 0\r\n      switch (state.badLogin) {\r\n        case 0:\r\n          badLogin = 1\r\n          break;\r\n        case 1:\r\n          badLogin = 2\r\n          break\r\n        default:\r\n          badLogin = 1\r\n      }\r\n      return {\r\n        ...state,\r\n        badLogin: badLogin\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","const initialState = {\r\n  currentGameId: '',\r\n  inPlay: false,\r\n  game: '',\r\n  userGames: '',\r\n  winner: ''\r\n}\r\n\r\nconst gameReducer = (state = initialState, event) => {\r\n  switch (event.type) {\r\n    case \"CREATE_GAME\":\r\n      return {\r\n        ...state,\r\n        currentGameId: event.gameId\r\n      }\r\n    case \"PLAY_GAME\":\r\n      return {\r\n        ...state,\r\n        inPlay: true\r\n      }\r\n    case \"FIND_GAME\":\r\n      return {\r\n        ...state,\r\n        game: event.game\r\n      }\r\n    case \"DONT_PLAY_GAME\":\r\n      return {\r\n        ...state,\r\n        inPlay: false\r\n      }\r\n    case \"SET_USER_GAMES\":\r\n      return {\r\n        ...state,\r\n        userGames: event.games\r\n      }\r\n    case \"END_GAME\":\r\n      return {\r\n        ...state,\r\n        inPlay: false,\r\n        winner: event.winner\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n\r\n}\r\n\r\nexport default gameReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport { Provider } from 'react-redux'\r\nimport userReducer from './reducers/UserReducer'\r\nimport gameReducer from \"./reducers/GameReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  userReducer, gameReducer\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}